package interfaz;

import dominio.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Agustín Juárez - 236487
 * @author Eduardo Thevenet - 168626
 */
public class VentanaAgregarDocente extends javax.swing.JFrame {

    private Sistema modelo;

    public VentanaAgregarDocente(Sistema modelo) {
        initComponents();
        this.modelo = modelo;
        this.setLocationRelativeTo(null);
        this.actualizarLista();
    }

    private void actualizarLista() {

        DefaultListModel l = new DefaultListModel();
        for (Docente d : this.modelo.getDocentes()) {
            l.addElement(d);
        }
        jListDocentes.setModel(l);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldIngresoCrearDocente = new javax.swing.JTextField();
        jTextFieldNombreCrearDocente = new javax.swing.JTextField();
        jTextFieldCICrearDocente = new javax.swing.JTextField();
        jTextFieldMailCrearDocente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButtonCrearDocente = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 23), new java.awt.Dimension(0, 23), new java.awt.Dimension(32767, 23));
        jScrollPane2 = new javax.swing.JScrollPane();
        jListDocentes = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Concurso de programación - Agregar Docente");
        setMinimumSize(new java.awt.Dimension(630, 400));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel1.setText("Lista docentes");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(420, 20, 160, 24);

        jLabel2.setText("AÑO INGRESO:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 205, 100, 14);

        jTextFieldIngresoCrearDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIngresoCrearDocenteActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldIngresoCrearDocente);
        jTextFieldIngresoCrearDocente.setBounds(170, 200, 190, 20);

        jTextFieldNombreCrearDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreCrearDocenteActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldNombreCrearDocente);
        jTextFieldNombreCrearDocente.setBounds(170, 80, 190, 20);

        jTextFieldCICrearDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCICrearDocenteActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldCICrearDocente);
        jTextFieldCICrearDocente.setBounds(170, 120, 190, 20);
        getContentPane().add(jTextFieldMailCrearDocente);
        jTextFieldMailCrearDocente.setBounds(170, 160, 190, 20);

        jLabel3.setText("NOMBRE:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 85, 70, 14);

        jLabel4.setText("C.I:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 125, 50, 14);

        jLabel5.setText("MAIL:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 165, 90, 14);

        jButtonCrearDocente.setText("CREAR");
        jButtonCrearDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearDocenteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCrearDocente);
        jButtonCrearDocente.setBounds(120, 250, 180, 23);

        jLabel6.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel6.setText("Crear docente");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(130, 20, 140, 24);
        getContentPane().add(filler1);
        filler1.setBounds(380, 80, 0, 200);

        jScrollPane2.setViewportView(jListDocentes);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(400, 60, 170, 210);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNombreCrearDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreCrearDocenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreCrearDocenteActionPerformed

    private void jTextFieldCICrearDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCICrearDocenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCICrearDocenteActionPerformed

    private void jTextFieldIngresoCrearDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIngresoCrearDocenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIngresoCrearDocenteActionPerformed

    private void jButtonCrearDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearDocenteActionPerformed
        String nombre = "";
        String mail = "";
        String ingreso = "";
        String ci = "";
        String regex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
        Pattern pattern = Pattern.compile(regex);
        String erroresValidaciones = "";

        if (!this.modelo.getHelper().esNumero(jTextFieldNombreCrearDocente.getText())) {
            if (jTextFieldNombreCrearDocente.getText().equals("")) {
                erroresValidaciones += "El campo nombre no puede ser vacío \n";
            } else {
                nombre = jTextFieldNombreCrearDocente.getText();
            }
        } else {
            erroresValidaciones += "El campo nombre no puede contener números \n";
        }

        Matcher matcher = pattern.matcher(jTextFieldMailCrearDocente.getText());
        if (matcher.matches()) {
            mail = jTextFieldMailCrearDocente.getText();
        } else {
            if (jTextFieldMailCrearDocente.getText().equals("")) {
                erroresValidaciones += "El campo email no puede ser vacío \n";
            } else {
                erroresValidaciones += "Formato de email incorrecto \n";
            }
        }

        if (this.modelo.getHelper().esNumero(jTextFieldIngresoCrearDocente.getText())) {
            ingreso = jTextFieldIngresoCrearDocente.getText();
        } else {
            if (jTextFieldIngresoCrearDocente.getText().equals("")) {
                erroresValidaciones += "El campo ingreso no puede ser vacío \n";
            } else {
                erroresValidaciones += "El campo ingreso debe contener solamente números \n";
            }
        }

        if (this.modelo.getHelper().esNumero(jTextFieldCICrearDocente.getText())) {
            ci = jTextFieldCICrearDocente.getText();
        } else {
            if (jTextFieldCICrearDocente.getText().equals("")) {
                erroresValidaciones += "El campo CI no puede ser vacío \n";
            } else {
                erroresValidaciones += "El campo ci debe contener solamente números \n";
            }
        }
        if (erroresValidaciones.equals("")) {
            Docente docente = new Docente(nombre, ci, mail, ingreso);
            boolean ok = this.modelo.agregarDocente(docente);
            if (ok) {
                JOptionPane.showMessageDialog(null, "El Docente " + nombre + " se ha dado de alta en el sistema", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                this.actualizarLista();
            } else {
                JOptionPane.showMessageDialog(null, "El Docente " + nombre + " ya se encuentra en el sistema.", "Informacion", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, erroresValidaciones, "Error en validaciones", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCrearDocenteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButtonCrearDocente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jListDocentes;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldCICrearDocente;
    private javax.swing.JTextField jTextFieldIngresoCrearDocente;
    private javax.swing.JTextField jTextFieldMailCrearDocente;
    private javax.swing.JTextField jTextFieldNombreCrearDocente;
    // End of variables declaration//GEN-END:variables

}
